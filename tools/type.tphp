

namespace TelegramBot\types;

/**
 * <?=$description?>

 *
<?php foreach($fields as $fieldName => $field) { ?>
<?php if (isArray($field['type'])) continue; ?>
 * @method <?=$field['type']?> get<?=$fieldName?> <?=$field['description']?>

<?php } ?>
 *
<?php if ($typeIsParameter) { ?>
<?php foreach($fields as $fieldName => $field) { ?>
<?php if (isArray($field['type'])) continue; ?>
 * @method $this set<?=$fieldName?>(<?=$field['type']?> $<?=lcfirst($fieldName)?>) <?=$field['description']?>

<?php } ?>
 *
<?php } ?>
 * @url <?=$url?>#<?=$anchor?>

 *
 * @author Yuri Nazarenko / rezident <m@rezident.org>
 */
class <?=$name?> extends AbstractType
{

<?php foreach($fields as $fieldName => $field) { ?>
<?php if (!isArray($field['type'])) continue; ?>
    /**
     * <?=$field['description']?>

     *
     * @return <?=$field['type']?>

     */
    function get<?=$fieldName?>()
    {
        return parent::get<?=$fieldName?>();
    }

<?php if ($typeIsParameter) { ?>
    /**
     * <?=$field['description']?>

     *
     * @param <?=$field['type']?> $<?=lcfirst($fieldName)?>

     *
     * @return $this
     */
    function set<?=$fieldName?>($<?=lcfirst($fieldName)?>)
    {
        return parent::set<?=$fieldName?>($<?=lcfirst($fieldName)?>);
    }

<?php } ?>
<?php } ?>
}
